services:
  django:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3
    restart: unless-stopped
    env_file:
      - ./.env.prod
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:17
    restart: unless-stopped
    container_name: postgres
    env_file:
      - ./.env.prod
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: celery_worker
    restart: unless-stopped
    command: celery -A core.celery:app worker --loglevel=info
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - postgres

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: celery_beat
    restart: unless-stopped
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./.env.prod
    depends_on:
      - django
      - redis

  nginx:
    image: nginx:1.29.2
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./core/static:/static
      - ./core/media:/media
      - ./nginx/certs:/etc/nginx/certs:ro  # put SSL certs here if using HTTPS
    depends_on:
      - django

  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: smtp4dev
    restart: unless-stopped
    ports:
      - "3000:3000"   # web UI
      - "25:25"       # SMTP port (apps send to this)
    volumes:
      - smtp4dev-data:/data

volumes:
  postgres-data:
  smtp4dev-data: